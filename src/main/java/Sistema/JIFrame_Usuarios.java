
package Sistema;
import CapaLogica.UsuariosDAO;
import CapaLogica.UsuariosLogica;
import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JDesktopPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexhp
 */

public class JIFrame_Usuarios extends javax.swing.JInternalFrame {
    
    private MainFrame mainFrame;
    private JDesktopPane desktopPane;
    UsuariosLogica usuariosLogica;
    UsuariosDAO usuariosDAO;

  
    public JIFrame_Usuarios(JDesktopPane desktopPane, MainFrame mainFrame) {
        initComponents();
        usuariosLogica = new UsuariosLogica();
        usuariosDAO = new UsuariosDAO();
        this.desktopPane = desktopPane;
        this.mainFrame = mainFrame;
    }
    
    public void LimpiarCampos(){
        txtCorreo.setText("");
        txtNombre.setText("");
        txtApellido.setText("");
        txtClave.setText("");
        rdbGrupoNivel.clearSelection();
        txtCorreo.grabFocus();
    }
    
    private void actualizarTabla() {
        DefaultTableModel modelo = new DefaultTableModel();
        
        modelo.addColumn("Correo");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("Clave");
        modelo.addColumn("Nivel");

        try {
            ResultSet resultado = usuariosLogica.obtenerTodosLosUsuarios();

            while (resultado.next()) {
                
                String nivelTexto = "";
                int nivel = resultado.getInt("niveles");
                
                if (nivel == 1) {
                    nivelTexto = "Usuario";
                } else if (nivel == 2) {
                    nivelTexto = "Asistente";
                } else if (nivel == 3) {
                    nivelTexto = "Administrador";
                }

                modelo.addRow(new Object[]{
                    resultado.getString("correos"),
                    resultado.getString("nombres"),
                    resultado.getString("apellidos"),
                    resultado.getString("claves"),
                    nivelTexto
                });
            }
        } catch (Exception e) {
                System.out.println("Error al cargar los datos: " + e.getMessage());
        }

        tablaUsuarios.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdbGrupoNivel = new javax.swing.ButtonGroup();
        lblCorreo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        lblClave = new javax.swing.JLabel();
        txtClave = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        rdbUsuario = new javax.swing.JRadioButton();
        rdbAsistente = new javax.swing.JRadioButton();
        rdbAdministrador = new javax.swing.JRadioButton();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaUsuarios = new javax.swing.JTable();
        btnLimpiar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Administrador de Usuarios");
        setToolTipText("");

        lblCorreo.setText("Correo:");

        lblNombre.setText("Nombres:");

        lblApellido.setText("Apellidos:");

        lblClave.setText("Clave:");

        rdbGrupoNivel.add(rdbUsuario);
        rdbUsuario.setSelected(true);
        rdbUsuario.setText("Usuario");

        rdbGrupoNivel.add(rdbAsistente);
        rdbAsistente.setText("Asistente");

        rdbGrupoNivel.add(rdbAdministrador);
        rdbAdministrador.setText("Administrador");

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnSalir.setBackground(new java.awt.Color(255, 51, 51));
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar");
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        tablaUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaUsuarios);

        btnLimpiar.setText("Limpiar Campos");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(lblCorreo))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblClave)
                                .addComponent(lblApellido)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(665, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(792, 792, 792)
                            .addComponent(btnSalir))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(82, 82, 82)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(rdbUsuario)
                                        .addComponent(rdbAsistente)
                                        .addComponent(rdbAdministrador)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnGuardar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnBuscar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnLimpiar))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnActualizar)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnEliminar)))
                            .addGap(10, 10, 10)
                            .addComponent(btnMostrar)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(30, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCorreo)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApellido)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClave)
                    .addComponent(txtClave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(272, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(164, 164, 164)
                            .addComponent(rdbUsuario)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rdbAsistente)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(rdbAdministrador)
                            .addGap(24, 24, 24)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnMostrar)
                                .addComponent(btnLimpiar)
                                .addComponent(btnGuardar)
                                .addComponent(btnBuscar))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnActualizar)
                                .addComponent(btnEliminar))))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(btnSalir)
                    .addContainerGap(26, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        String correo = txtCorreo.getText().trim();
        String nombre = txtNombre.getText().trim();
        String apellido = txtApellido.getText().trim();
        String clave = txtClave.getText().trim();
        int nivel = -1;

        if (correo.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || clave.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Error, Todos los campos deben estar llenos.");
            return;
        }

        if(rdbUsuario.isSelected()){
            nivel = 1;
        } else if(rdbAsistente.isSelected()) {
            nivel = 2;
        } else if(rdbAdministrador.isSelected()) {
            nivel = 3;
        }

        usuariosDAO.setCorreos(correo);
        usuariosDAO.setNombres(nombre);
        usuariosDAO.setApellidos(apellido);
        usuariosDAO.setClaves(clave);
        usuariosDAO.setNivel(nivel);

        boolean resultado = usuariosLogica.insertarUsuario(usuariosDAO);
        if(resultado){
            JOptionPane.showMessageDialog(rootPane, "ERROR, El Correo ya existe en el registro.");
        } else {
            LimpiarCampos();
            actualizarTabla();
            JOptionPane.showMessageDialog(rootPane, "Usuarios agregado al registro...");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        String correoBuscar = txtCorreo.getText().trim();

        usuariosDAO.setCorreos(correoBuscar);

        ArrayList<UsuariosDAO> resultado = usuariosLogica.getListado(usuariosDAO);

        if (txtCorreo.getText().isEmpty()){
            JOptionPane.showMessageDialog(rootPane, "Campo de correo vacio.");
            return;
        } else if (resultado.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "No se encontró en la base de datos.");
            return;
        }

        for(UsuariosDAO registro : resultado){
            txtCorreo.setText(registro.getCorreos());
            txtNombre.setText(registro.getNombres());
            txtApellido.setText(registro.getApellidos());
            txtClave.setText(registro.getClaves());

            int nivelEncontrado = registro.getNivel();
            if(nivelEncontrado == 1){
                rdbUsuario.setSelected(true);
            } else if (nivelEncontrado == 2){
                rdbAsistente.setSelected(true);
            } else if (nivelEncontrado == 3){
                rdbAdministrador.setSelected(true);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String correo = txtCorreo.getText().trim();

        if (correo.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Error, el campo de correo debe estar lleno.");
            return;
        }

        int confirmacion = JOptionPane.showConfirmDialog(rootPane, "¿Estás seguro de que deseas eliminar este usuario?",
                "Confirmar eliminación", JOptionPane.YES_NO_OPTION);
        if (confirmacion == JOptionPane.YES_OPTION) {
            boolean resultado = usuariosLogica.eliminarUsuario(correo);
            if (resultado) {
                JOptionPane.showMessageDialog(rootPane, "ERROR al eliminar el registro");
            } else {
                LimpiarCampos();
                JOptionPane.showMessageDialog(rootPane, "Usuario eliminado correctamente.");
                actualizarTabla();
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String correo = txtCorreo.getText().trim();
        String nombre = txtNombre.getText().trim();
        String apellido = txtApellido.getText().trim();
        String clave = txtClave.getText().trim();
        int nivel = -1;

        if (correo.isEmpty() || nombre.isEmpty() || apellido.isEmpty() || clave.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Error, Todos los campos deben estar llenos.");
            return;
        }

        if (rdbUsuario.isSelected()) {
            nivel = 1;
        } else if (rdbAsistente.isSelected()) {
            nivel = 2;
        } else if (rdbAdministrador.isSelected()) {
            nivel = 3;
        } else {
            JOptionPane.showMessageDialog(rootPane, "Error, Seleccione una opción de nivel");
            return;
        }

        usuariosDAO.setCorreos(correo);
        usuariosDAO.setNombres(nombre);
        usuariosDAO.setApellidos(apellido);
        usuariosDAO.setClaves(clave);
        usuariosDAO.setNivel(nivel);

        boolean resultado = usuariosLogica.actualizarUsuario(usuariosDAO);
        if (resultado) {
            JOptionPane.showMessageDialog(rootPane, "ERROR al actualizar el registro");
        } else {
            LimpiarCampos();
            JOptionPane.showMessageDialog(rootPane, "Usuario actualizado correctamente.");
            actualizarTabla();
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        // TODO add your handling code here:
        actualizarTabla();
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void tablaUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaUsuariosMouseClicked
        // TODO add your handling code here:
        int numeroFila = tablaUsuarios.getSelectedRow();

        txtCorreo.setText(tablaUsuarios.getValueAt(numeroFila, 0).toString());
        txtNombre.setText(tablaUsuarios.getValueAt(numeroFila, 1).toString());
        txtApellido.setText(tablaUsuarios.getValueAt(numeroFila, 2).toString());
        txtClave.setText(tablaUsuarios.getValueAt(numeroFila, 3).toString());

        String nivel = tablaUsuarios.getValueAt(numeroFila, 4).toString();
        if (nivel.equals("Usuario")) {
            rdbUsuario.setSelected(true);
        } else if (nivel.equals("Asistente")) {
            rdbAsistente.setSelected(true);
        } else if (nivel.equals("Administrador")) {
            rdbAdministrador.setSelected(true);
        }
    }//GEN-LAST:event_tablaUsuariosMouseClicked

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        // TODO add your handling code here:
        LimpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JButton btnSalir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblClave;
    private javax.swing.JLabel lblCorreo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JRadioButton rdbAdministrador;
    private javax.swing.JRadioButton rdbAsistente;
    private javax.swing.ButtonGroup rdbGrupoNivel;
    private javax.swing.JRadioButton rdbUsuario;
    private javax.swing.JTable tablaUsuarios;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtClave;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
